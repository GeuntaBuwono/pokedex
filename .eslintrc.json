{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin-import-helpers",
    "eslint-plugin-react",
    "react-hooks",
    "react",
    "sonarjs",
    "prettier",
    "simple-import-sort"
  ],
  "extends": [
    "eslint:recommended",
    "@react-native-community",
    "plugin:react-hooks/recommended",
    "plugin:react/recommended",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:sonarjs/recommended",
    "plugin:prettier/recommended"
  ],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {}
    },
    {
      "files": ["*.test.ts", "*.test.tsx"],
      "plugins": ["jest"],
      "extends": ["plugin:jest/recommended"],
      "rules": {
        "jest/prefer-strict-equal": "error",
        "jest/prefer-todo": "error",
        "jest/unbound-method": "error",
        "jest/prefer-spy-on": "error",
        "jest/prefer-expect-resolves": "error",
        "jest/prefer-comparison-matcher": "error",
        "jest/max-nested-describe": ["error", {"max": 2}],
        "jest/prefer-expect-assertions": "off",
        "jest/prefer-lowercase-title": [
          "error",
          {
            "ignore": ["describe"]
          }
        ],
        "jest/consistent-test-it": [
          "error",
          {"fn": "it", "withinDescribe": "test"}
        ]
      }
    }
  ],
  "rules": {
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "enum",
        "format": ["PascalCase"],
        "suffix": ["Enum"]
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "generic"
      }
    ],
    "no-console": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/consistent-generic-constructors": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "class-methods-use-this": "off",
    "import/prefer-default-export": 0,
    "no-inline-comments": "error",
    "no-nested-ternary": "error",
    "no-shadow": "off",
    "no-unreachable": "error",
    "no-unused-vars": "off",
    "sonarjs/no-duplicate-string": ["error", 5],
    "semi": "off",
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": "error",
    "jsx-quotes": ["error", "prefer-double"],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "react/button-has-type": "off",
    "react/display-name": "warn",
    "react/jsx-props-no-spreading": "warn",
    "react/jsx-boolean-value": "error",
    "react/jsx-closing-bracket-location": "off",
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-newline": "off",
    "react/prefer-stateless-function": "error",
    "react/jsx-filename-extension": ["error", {"extensions": [".tsx", ".jsx"]}],
    "react/destructuring-assignment": [0],
    "react/forbid-prop-types": [0],
    "react/no-unescaped-entities": ["error", {"forbid": [">", "}"]}],
    "react/react-in-jsx-scope": "off",
    "react/sort-comp": [0],
    "react/jsx-indent": "off",
    "react/jsx-tag-spacing": [
      2,
      {
        "beforeSelfClosing": "always"
      }
    ],
    "react/jsx-wrap-multilines": [
      2,
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "ignore",
        "condition": "ignore",
        "logical": "ignore",
        "prop": "ignore"
      }
    ],
    "prettier/prettier": [
      "error",
      {},
      {
        "usePrettierrc": true
      }
    ],
    "react/no-unstable-nested-components": [
      "error",
      {
        "allowAsProps": true
      }
    ]
  }
}
